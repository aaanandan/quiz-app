{"version":3,"sources":["constants/countdownTime.js","components/Header/index.js","components/Layout/index.js","components/Loader/index.js","images/anandagandha-sm-copy.png","images/kailaasa-flag-triangular-2019-compressed.png","constants/categories.js","constants/numOfQuestions.js","utils/calculateGrade.js","utils/calculateScore.js","utils/getLetter.js","utils/shuffle.js","utils/timeConverter.js","components/Offline/index.js","components/Main/index.js","components/Countdown/index.js","components/Quiz/index.js","components/ShareButton/index.js","components/Result/Stats.js","components/Result/QNA.js","components/Result/index.js","components/App/index.js","serviceWorkerRegistration.js","index.js"],"names":["Header","_useState","useState","_useState2","_slicedToArray","setPromptEvent","_useState3","_useState4","appAccepted","_useAuth","useAuth0","isAuthenticated","isLoading","user","window","matchMedia","matches","addEventListener","e","preventDefault","_jsxs","Menu","divided","stackable","size","style","children","_jsx","Item","header","color","_Fragment","position","nickname","src","picture","alt","Layout","_ref","Fragment","Loader","Container","Message","icon","Icon","name","loading","Content","MAJORS","key","text","value","COUNTDOWN_TIME","hours","minutes","seconds","i","push","NUM_OF_QUESTIONS","calculateGrade","score","undefined","percentage","parseInt","grade","remarks","calculateScore","totalQuestions","correctAnswers","Number","toFixed","getLetter","number","letter","shuffle","array","_toConsumableArray","length","j","Math","floor","random","timeConverter","milliseconds","concat","slice","Offline","location","reload","Segment","placeholder","role","aria-label","Main","startQuiz","loginWithRedirect","_useAuth2","logout","getAccessTokenSilently","major","setMajor","numOfQuestions","_useState5","_useState6","difficulty","_useState7","_useState8","questionsType","_useState9","_useState10","countdownTime","_useState11","_useState12","_useState13","_useState14","error","setError","_useState15","_useState16","offline","_useState17","_useState18","setLoading","allFieldsSelected","useEffect","axios","post","API_URL","_objectSpread","then","response","data","map","element","options","answers","sec","catch","Grid","columns","Row","Column","Image","verticalAlign","img","textAlign","anandagandha","floated","Group","onDismiss","message","Meta","Description","vertical","fluid","ele","disabled","active","onClick","marginRight","Divider","Extra","Button","logoutParams","returnTo","href","labelPosition","content","primary","Countdown","timeOver","setTimeTaken","totalTime","timerTime","setTimerTime","_timeConverter","timer","setInterval","newTime","clearInterval","Swal","fire","title","willClose","basic","Popup","trigger","Quiz","endQuiz","questionIndex","setQuestionIndex","setCorrectAnswers","userSlectedAns","setUserSlectedAns","questionsAndAnswers","setQuestionsAndAnswers","timeTaken","handleItemClick","_ref2","as","block","floating","he","decode","question","option","decodedOption","_id","point","fetch","method","body","JSON","stringify","_questionId","headers","respone","json","res","correct_answer","qna","user_answer","handleNext","ShareButton","navigator","share","circular","document","url","console","log","Modal","closeIcon","className","target","rel","marginBottom","Stats","replayQuiz","resetQuiz","_calculateGrade","marginTop","QNA","Table","celled","striped","selectable","HeaderCell","Body","item","Cell","Result","activeTab","setActiveTab","handleTabClick","widths","App","setData","setCountdownTime","isQuizStarted","setIsQuizStarted","isQuizCompleted","setIsQuizCompleted","resultData","setResultData","shuffledData","forEach","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","toast","showConfirmButton","onSuccess","ReactDOM","render","React","StrictMode","Auth0Provider","domain","clientId","authorizationParams","redirect_uri","getElementById","URL","process","origin","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.21d763cf.chunk.js","sourcesContent":["const COUNTDOWN_TIME = {\n  hours: [],\n  minutes: [],\n  seconds: []\n};\n\nfor (let i = 0; i < 100; i++) {\n  COUNTDOWN_TIME.hours.push({ key: i, text: i, value: i * 60 * 60 });\n}\n\nfor (let i = 0; i < 60; i++) {\n  COUNTDOWN_TIME.minutes.push({ key: i, text: i, value: i * 60 });\n}\n\nfor (let i = 0; i < 60; i++) {\n  COUNTDOWN_TIME.seconds.push({ key: i, text: i, value: i });\n}\n\nexport default COUNTDOWN_TIME;\n","import React, { useState } from 'react';\nimport { Menu, Button } from 'semantic-ui-react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nconst Header = () => {\n  const [promptEvent, setPromptEvent] = useState(null);\n  const [appAccepted, setAppAccepted] = useState(false);\n  const { isAuthenticated, isLoading, user } = useAuth0();\n\n  let isAppInstalled = false;\n\n  if (window.matchMedia('(display-mode: standalone)').matches || appAccepted) {\n    isAppInstalled = true;\n  }\n\n  window.addEventListener('beforeinstallprompt', e => {\n    e.preventDefault();\n    setPromptEvent(e);\n  });\n\n  const installApp = () => {\n    promptEvent.prompt();\n    promptEvent.userChoice.then(result => {\n      if (result.outcome === 'accepted') {\n        setAppAccepted(true);\n        console.log('User accepted the A2HS prompt');\n      } else {\n        console.log('User dismissed the A2HS prompt');\n      }\n    });\n  };\n\n  return (\n    <Menu divided stackable size=\"massive\" style={{ 'background': '#570E0E' }}>\n      <Menu.Item header style={{ 'background': '#570E0E' }}>\n        <h1 style={{ color: 'white' }}>KET&nbsp;-&nbsp;Kailasa&nbsp;eligiblity&nbsp;test</h1>\n      </Menu.Item>\n\n      {isAuthenticated && !isLoading && (\n        <>\n          <Menu.Item position=\"right\" style={{ 'background': '#570E0E', 'color': 'white' }}>\n            <h1>Welcome {user.nickname}!&nbsp;&nbsp;&nbsp;&nbsp;</h1>\n            <img src={user.picture} alt=\"\" />\n          </Menu.Item>\n        </>\n      )}\n    </Menu >\n  );\n};\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Header from '../Header';\n\nconst Layout = ({ children }) => {\n  return (\n    <Fragment>\n      <Header />\n      <main>{children}</main>\n    </Fragment>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Layout;\n","import React from 'react';\nimport { Container, Message, Icon } from 'semantic-ui-react';\n\nconst Loader = () => {\n  return (\n    <Container>\n      <Message icon size=\"big\">\n        <Icon name=\"circle notched\" loading />\n        <Message.Content>\n          <Message.Header>Just one second</Message.Header>\n          We are fetching that content for you.\n        </Message.Content>\n      </Message>\n    </Container>\n  );\n};\n\nexport default Loader;\n","export default __webpack_public_path__ + \"static/media/anandagandha-sm-copy.debb8840.png\";","export default __webpack_public_path__ + \"static/media/kailaasa-flag-triangular-2019-compressed.b6011790.png\";","const MAJORS = [\n  {\n    key: '0',\n    text: 'Hindu Philosophy',\n    value: 'hinduPhilosophy'\n  },\n  {\n    key: '1',\n    text: 'Hindu History',\n    value: 'hinduHistory'\n  },\n  {\n    key: '2',\n    text: 'Hindu identity',\n    value: 'hinduIdentity'\n  },\n  {\n    key: '3',\n    text: 'Know your Nation',\n    value: 'knowYourNation'\n  },\n];\n\nexport default MAJORS;\n","const NUM_OF_QUESTIONS = [];\n\nfor (let i = 1; i <= 50; i++) {\n  NUM_OF_QUESTIONS.push({ key: i, text: i, value: i });\n}\n\nexport default NUM_OF_QUESTIONS;\n","const calculateGrade = score => {\n\n  if ( score === null || score === undefined || typeof score !== 'number' ) {\n    return null;\n  }\n\n  const percentage = parseInt(score);\n\n  let grade = null;\n  let remarks = null;\n\n  if (percentage >= 97) {\n    grade = 'A+';\n  } else if (percentage >= 93 && percentage <= 96) {\n    grade = 'A';\n  } else if (percentage >= 90 && percentage <= 92) {\n    grade = 'A-';\n  } else if (percentage >= 87 && percentage <= 89) {\n    grade = 'B+';\n  } else if (percentage >= 83 && percentage <= 86) {\n    grade = 'B';\n  } else if (percentage >= 80 && percentage <= 82) {\n    grade = 'B-';\n  } else if (percentage >= 77 && percentage <= 79) {\n    grade = 'C+';\n  } else if (percentage >= 73 && percentage <= 76) {\n    grade = 'C';\n  } else if (percentage >= 70 && percentage <= 72) {\n    grade = 'C-';\n  } else if (percentage >= 67 && percentage <= 69) {\n    grade = 'D+';\n  } else if (percentage >= 63 && percentage <= 66) {\n    grade = 'D';\n  } else if (percentage >= 60 && percentage <= 62) {\n    grade = 'D-';\n  } else if (percentage < 60) {\n    grade = 'F';\n  }\n\n  if (score >= 60) {\n    remarks = 'Congratulations, YOU PASSED!';\n  } else {\n    remarks = 'Sorry, YOU FAILED!';\n  }\n\n  return {\n    grade,\n    remarks\n  };\n};\n\nexport default calculateGrade;\n","const calculateScore = (totalQuestions, correctAnswers) => {\n  if ( totalQuestions === 0 ) {\n    return 0\n  }\n  return Number(((correctAnswers * 100) / totalQuestions).toFixed(2));\n};\n\nexport default calculateScore;\n","const getLetter = number => {\n  let letter;\n\n  switch (number) {\n    case 0:\n      letter = 'A.';\n      break;\n    case 1:\n      letter = 'B.';\n      break;\n    case 2:\n      letter = 'C.';\n      break;\n    case 3:\n      letter = 'D.';\n      break;\n    default:\n      letter = null;\n      break;\n  }\n\n  return letter;\n};\n\nexport default getLetter;\n","const shuffle = array => {\n  array = [...array];\n\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n};\n\nexport default shuffle;\n","const timeConverter = milliseconds => {\n  if ( milliseconds === null || milliseconds === undefined || typeof milliseconds !== 'number' ) {\n    return null;\n  }\n  const hours = `0${Math.floor(milliseconds / 3600000)}`.slice(-2);\n  const minutes = `0${Math.floor((milliseconds / 60000) % 60)}`.slice(-2);\n  const seconds = `0${Math.floor((milliseconds / 1000) % 60) % 60}`.slice(-2);\n\n  return {\n    hours,\n    minutes,\n    seconds\n  };\n};\n\nexport default timeConverter;\n","import React from 'react';\nimport { Container, Segment, Header, Icon } from 'semantic-ui-react';\n\nconst Offline = () => {\n  window.addEventListener('online', () => window.location.reload());\n\n  return (\n    <Container>\n      <Segment placeholder>\n        <Header icon>\n          <Icon name=\"unlink\" />\n          <h1>Offline</h1>\n          <p>\n            There is no Internet connection. We'll try to reload automatically\n            once you're back online!{' '}\n            <span role=\"img\" aria-label=\"signal\">\n              📶\n            </span>\n          </p>\n        </Header>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default Offline;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  Segment,\n  Item,\n  Divider,\n  Button,\n  Message,\n  Menu,\n  Image,\n  Grid\n} from 'semantic-ui-react';\n\nimport anandagandha from '../../images/anandagandha-sm-copy.png'\nimport img from '../../images/kailaasa-flag-triangular-2019-compressed.png'\nimport Loader from '../Loader';\nimport axios from 'axios';\n\nimport {\n  MAJORS, API_URL\n} from '../../constants';\nimport { shuffle } from '../../utils';\n\nimport Offline from '../Offline';\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Main = ({ startQuiz }) => {\n  const { loginWithRedirect } = useAuth0();\n  const { logout, isAuthenticated, isLoading, user, getAccessTokenSilently } = useAuth0();\n\n  // const [isLoggedin, setIsloggedIn] = useState(false);\n  const [major, setMajor] = useState({ value: null, text: null });\n  const [numOfQuestions, setNumOfQuestions] = useState(5);\n  const [difficulty, setDifficulty] = useState('0');\n  const [questionsType, setQuestionsType] = useState('0');\n  const [countdownTime, setCountdownTime] = useState({\n    hours: 0,\n    minutes: 4,\n    seconds: 0,\n  });\n  const [data, setData] = useState(null);\n\n  // const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [offline, setOffline] = useState(false);\n  const handleTimeChange = (e, { name, value }) => {\n    setCountdownTime({ ...countdownTime, [name]: value });\n  };\n  const [loading, setLoading] = useState(false);\n  let allFieldsSelected = false;\n  if (\n    major.value &&\n    numOfQuestions &&\n    difficulty &&\n    questionsType &&\n    (countdownTime.hours || countdownTime.minutes || countdownTime.seconds)\n  ) {\n    allFieldsSelected = true;\n  }\n\n  const api = API_URL + '/getQuestions';\n  // const fetchData = async () => {\n  //   const response = await fetch(\"https://jsonplaceholder.typicode.com/users\")\n  //   const data = await response.json()\n  // }\n\n  // const getData = async () => {\n  //   const response = await fetch(api, {\n  //     method: 'POST',\n  //     body: JSON.stringify({ major: major.value, user }),\n  //     headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\n  //   });\n  //   let data = await response.json();\n  //   data = data.map(element => {\n  //     console.log(element);\n  //     element.options = shuffle([\n  //       ...element.answers,\n  //     ]);\n  //     setData(data => data);\n  //   });\n  // };\n  useEffect(() => {\n    if (!loading) return;\n\n    axios.post(api, { major: major.value, ...user })\n      .then(function (response) {\n        let data = response.data;\n        data = data.map(element => {\n          element.options = shuffle([\n            ...element.answers,\n          ]);\n        });\n        let sec = countdownTime.hours * 60 * 60 + countdownTime.minutes * 60 + countdownTime.seconds;\n        startQuiz(response.data, sec, major);\n      })\n      .catch(function (error) {\n        setError(error);\n      });\n\n\n  }, [loading, major.value]);\n\n  if (offline) return <Offline />;\n  return (\n    <Container>\n      <Segment>\n        <Grid columns={3}>\n          <Grid.Row>\n            <Grid.Column key={1}><Image size=\"medium\" verticalAlign=\"middle\" src={img} /></Grid.Column>\n            <Grid.Column key={2} textAlign=\"center\" verticalAlign=\"middle\"><h2>Majors</h2></Grid.Column>\n            <Grid.Column key={3}><Image size=\"small\" verticalAlign=\"middle\" src={anandagandha} floated=\"right\" /></Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n      <Segment>\n        <Item.Group >\n          <Item>\n            <Item.Content>\n              {error && (\n                <Message error onDismiss={() => setError(null)}>\n                  <Message.Header>Error!</Message.Header>\n                  {error.message}\n                </Message>\n              )}\n              <Item.Meta>\n                <br />\n                <Item.Description>\n                  {isAuthenticated && !isLoading ? <h3>Please choose a major to start, complete all the majors</h3> : <h3>Please login to start</h3>}\n                </Item.Description>\n\n                <Menu vertical fluid size=\"massive\" >\n                  {MAJORS.map((ele, i) => {\n                    return (\n                      <Menu.Item\n                        key={i}\n                        name={ele.text}\n                        disabled={!isAuthenticated}\n                        active={major.value === ele.value}\n                        onClick={() => { setMajor(ele) }}>\n                        <b style={{ marginRight: '8px' }}>{i + 1}. </b>\n                        {ele.text}\n                      </Menu.Item>\n                    );\n                  })}\n                </Menu>\n              </Item.Meta>\n              <Divider />\n              <Divider />\n              <Item.Extra>\n                {!isAuthenticated && !isLoading ? <Button primary\n                  size=\"big\"\n                  icon=\"user\"\n                  labelPosition=\"left\"\n                  content={'Login'}\n                  onClick={() => {\n                    loginWithRedirect();\n\n                  }}\n                  disabled={allFieldsSelected || loading} /> :\n                  <Button\n                    onClick={() => logout({ logoutParams: { returnTo: window.location.href } })}\n                    size=\"big\"\n                    icon=\"user\"\n                    labelPosition=\"left\"\n                    content={'Logout'}\n                    disabled={allFieldsSelected || loading} />}\n                <Button\n                  primary\n                  size=\"big\"\n                  icon=\"play\"\n                  labelPosition=\"left\"\n                  content={loading ? 'Processing...' : 'Start Now'}\n                  onClick={() => setLoading(true)}\n                  disabled={!allFieldsSelected || loading}\n                  floated=\"right\"\n                />\n              </Item.Extra>\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      {loading && <><br /> <Loader /></>}\n      {/* <Segment>\n        <Grid columns={3}>\n          <Grid.Row>\n            <Grid.Column key={1}><h3>Welcome &nbsp;&nbsp;&nbsp;&nbsp; {user.name}</h3></Grid.Column>\n            <Grid.Column key={2} textAlign=\"center\" verticalAlign=\"middle\"><h2>&nbsp;&nbsp;&nbsp;&nbsp;{user.email}</h2></Grid.Column>\n            <Grid.Column key={3}><h2>{user.phone_number} {user.address} </h2></Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment> */}\n      <br />\n    </Container >\n  );\n};\nMain.propTypes = {\n  startQuiz: PropTypes.func.isRequired,\n};\nexport default Main;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Popup } from 'semantic-ui-react';\nimport Swal from 'sweetalert2';\n\nimport { timeConverter } from '../../utils';\n\nconst Countdown = ({ countdownTime, timeOver, setTimeTaken }) => {\n  const totalTime = countdownTime * 1000;\n  const [timerTime, setTimerTime] = useState(totalTime);\n  const { hours, minutes, seconds } = timeConverter(timerTime);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const newTime = timerTime - 1000;\n\n      if (newTime >= 0) {\n        setTimerTime(newTime);\n      } else {\n        clearInterval(timer);\n\n        Swal.fire({\n          title: `Your Time's Up`,\n          icon: 'info',\n          timer: 5000,\n          willClose: () => timeOver(totalTime - timerTime)\n        });\n      }\n    }, 1000);\n\n    return () => {\n      clearInterval(timer);\n      setTimeTaken(totalTime - timerTime + 1000);\n    };\n\n    // eslint-disable-next-line\n  }, [timerTime]);\n\n  return (\n    <Button.Group size=\"massive\" basic floated=\"right\">\n      <Popup\n        content=\"Hours\"\n        trigger={<Button active>{hours}</Button>}\n        position=\"bottom left\"\n      />\n      <Popup\n        content=\"Minutes\"\n        trigger={<Button active>{minutes}</Button>}\n        position=\"bottom left\"\n      />\n      <Popup\n        content=\"Seconds\"\n        trigger={<Button active>{seconds}</Button>}\n        position=\"bottom left\"\n      />\n    </Button.Group>\n  );\n};\n\nCountdown.propTypes = {\n  countdownTime: PropTypes.number.isRequired,\n  timeOver: PropTypes.func.isRequired,\n  setTimeTaken: PropTypes.func.isRequired\n};\n\nexport default Countdown;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  Segment,\n  Item,\n  Divider,\n  Button,\n  Image,\n  Grid,\n  Icon,\n  Message,\n  Menu,\n  Header\n} from 'semantic-ui-react';\n\nimport he from 'he';\nimport Countdown from '../Countdown';\nimport { getLetter } from '../../utils';\nimport img from '../../images/kailaasa-flag-triangular-2019-compressed.png';\nimport anandagandha from '../../images/anandagandha-sm-copy.png'\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport { API_URL } from '../../constants';\nimport Loader from '../Loader';\n\nconst Quiz = ({ data, countdownTime, endQuiz, major }) => {\n  const { user } = useAuth0();\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [userSlectedAns, setUserSlectedAns] = useState(null);\n  const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n  const [timeTaken, setTimeTaken] = useState(null);\n\n  const handleItemClick = (e, { name }) => {\n    setUserSlectedAns(name);\n  };\n\n  const handleNext = (_id) => {\n    let point = 0;\n    const api = API_URL + '/validateAnswer';\n\n    fetch(api, {\n      method: 'POST',\n      body: JSON.stringify({ major: major.value, _questionId: _id, userSlectedAns, user }),\n      headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\n\n    })\n      .then(respone => {\n        return respone.json().then(res => {\n          if (res.correct_answer === userSlectedAns) point = 1;\n          const qna = questionsAndAnswers;\n          qna.push({\n            question: he.decode(data[questionIndex].question),\n            user_answer: userSlectedAns,\n            correct_answer: res.correct_answer,\n            point\n          });\n\n          if (questionIndex === data.length - 1) {\n            return endQuiz({\n              totalQuestions: data.length,\n              correctAnswers: correctAnswers + point,\n              timeTaken,\n              questionsAndAnswers: qna\n            });\n          }\n\n          setCorrectAnswers(correctAnswers + point);\n          setQuestionIndex(questionIndex + 1);\n          setUserSlectedAns(null);\n          setQuestionsAndAnswers(qna);\n        })\n      })\n  };\n\n  const timeOver = timeTaken => {\n    return endQuiz({\n      totalQuestions: data.length,\n      correctAnswers,\n      timeTaken,\n      questionsAndAnswers\n    });\n  };\n\n  // useEffect(() => {\n  //   // console.log(data)\n  //   // if (!data) return;\n  // }, []);\n\n  // const [questionIndex, setQuestionIndex] = useState(0);\n  // const [correctAnswers, setCorrectAnswers] = useState(0);\n  // const [userSlectedAns, setUserSlectedAns] = useState(null);\n  // const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n  // const [timeTaken, setTimeTaken] = useState(null);\n  // const [offline, setOffline] = useState(false);\n\n\n  // const [processing, setProcessing] = useState(false);\n  // const [error, setError] = useState(null);\n\n  // const handleItemClick = (e, { name }) => {\n  //   setUserSlectedAns(name);\n  // };\n\n  // const handleNext = (_id) => {\n  //   let point = 0;\n  //   setProcessing(true);\n  //   if (error) setError(null);\n  //   let qna;\n  //   const api = 'http://localhost:5050/' + major.value + '/' + _id;\n  //   fetch(api)\n  //     .then(respone => {\n  //       return respone.json().then(res => {\n  //         point = res.correct_answer === userSlectedAns ? 1 : 0;\n  //         qna = [...questionsAndAnswers, {\n  //           question: he.decode(data[questionIndex].question),\n  //           user_answer: userSlectedAns,\n  //           correct_answer: res.correct_answer,\n  //           point\n  //         }];\n  //         setQuestionsAndAnswers(qna);\n  //         setCorrectAnswers(correctAnswers + point);\n  //         setUserSlectedAns(null);\n  //         setProcessing(false);\n  //       }).then(() => {\n  //         setQuestionIndex(questionIndex + 1, () => {\n  //           if (questionIndex === data.length - 1) {\n  //             return endQuiz({\n  //               totalQuestions: data.length,\n  //               correctAnswers: correctAnswers,\n  //               timeTaken,\n  //               questionsAndAnswers,\n  //             });\n  //           }\n  //         });\n  //       })\n  //     }).catch(error =>\n  //       setTimeout(() => {\n  //         if (!navigator.onLine) {\n  //           setOffline(true);\n  //         } else {\n  //           setProcessing(false);\n  //           setError(error);\n  //         }\n  //       }, 1000)\n  //     );\n  // };\n\n  // if (questionIndex === data.length - 1) {\n  //   return endQuiz({\n  //     totalQuestions: data.length,\n  //     correctAnswers: correctAnswers,\n  //     timeTaken,\n  //     questionsAndAnswers,\n  //   });\n  // }\n\n  // const timeOver = timeTaken => {\n  //   return endQuiz({\n  //     totalQuestions: data.length,\n  //     correctAnswers,\n  //     timeTaken,\n  //     questionsAndAnswers\n  //   });\n  // };\n  if (!data) return (<><br /> <Loader /></>);\n  return (\n    <Item.Header>\n      <Container>\n        <Segment>\n          <Grid columns={3}>\n            <Grid.Row>\n              <Grid.Column key={1}><Image size=\"medium\" verticalAlign=\"middle\" src={img} /></Grid.Column>\n              <Grid.Column key={2} textAlign=\"center\" verticalAlign=\"middle\"><h2>{major.text}</h2></Grid.Column>\n              <Grid.Column key={3}><Image size=\"small\" src={anandagandha} floated=\"right\" /></Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n        <Segment>\n          <Item.Group divided>\n            <Item>\n              <Item.Content>\n                <Item.Extra>\n                  <Header as=\"h1\" block floated=\"left\">\n                    <Icon name=\"info circle\" />\n                    <Header.Content>\n                      {`Question No.${questionIndex + 1} of ${data.length}`}\n                    </Header.Content>\n                  </Header>\n                  <Countdown\n                    countdownTime={countdownTime}\n                    timeOver={timeOver}\n                    setTimeTaken={setTimeTaken}\n                  />\n                </Item.Extra>\n                <br />\n                <Item.Meta>\n                  <Message size=\"huge\" floating>\n                    <b>{`Q. ${he.decode(data[questionIndex].question)}`}</b>\n                  </Message>\n                  <br />\n                  <Item.Description>\n                    <h3>Please choose one of the following answers:</h3>\n                  </Item.Description>\n                  <Divider />\n                  <Menu vertical fluid size=\"massive\">\n                    {data[questionIndex].options.map((option, i) => {\n                      const letter = getLetter(i);\n                      const decodedOption = he.decode(option);\n                      return (\n                        <Menu.Item\n                          key={decodedOption}\n                          name={decodedOption}\n                          active={userSlectedAns === decodedOption}\n                          onClick={handleItemClick}\n                        >\n                          <b style={{ marginRight: '8px' }}>{letter}</b>\n                          {decodedOption}\n                        </Menu.Item>\n                      );\n                    })}\n                  </Menu>\n                </Item.Meta>\n                <Divider />\n                <Item.Extra>\n                  <Button\n                    primary\n                    content=\"Next\"\n                    onClick={() => handleNext(he.decode(data[questionIndex]._id))}\n                    floated=\"right\"\n                    size=\"big\"\n                    icon=\"right chevron\"\n                    labelPosition=\"right\"\n                    disabled={!userSlectedAns}\n                  />\n                </Item.Extra>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n        <br />\n      </Container>\n    </Item.Header>\n  );\n};\n\nQuiz.propTypes = {\n  data: PropTypes.array.isRequired,\n  countdownTime: PropTypes.number.isRequired,\n  endQuiz: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React, { Fragment } from 'react';\nimport { Button, Icon, Modal } from 'semantic-ui-react';\n\nconst ShareButton = () => {\n  const handleClick = () => {\n    navigator\n      .share({\n        title: document.title,\n        text: 'Check out this quiz app — it rocks!',\n        url: 'https://safdarjamal.github.io/quiz-app/'\n      })\n      .then(() => console.log('Successfully shared'))\n      .catch(error => console.log(error.message));\n  };\n\n  return (\n    <Fragment>\n      {navigator.share ? (\n        <Button\n          title=\"Share\"\n          floated=\"right\"\n          size=\"big\"\n          circular\n          icon=\"share alternate\"\n          onClick={handleClick}\n        />\n      ) : (\n        <Modal\n          closeIcon\n          size=\"tiny\"\n          trigger={\n            <Button\n              title=\"Share\"\n              floated=\"right\"\n              size=\"big\"\n              circular\n              icon=\"share alternate\"\n            />\n          }\n        >\n          <Modal.Header className=\"ui center aligned\">Share on</Modal.Header>\n          <Modal.Content className=\"ui center aligned container\">\n            <a\n              href=\"https://www.facebook.com/sharer.php?u=https%3A//safdarjamal.github.io/quiz-app/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Button color=\"facebook\" size=\"big\" style={{ marginBottom: 8 }}>\n                <Icon name=\"facebook\" />\n                Facebook\n              </Button>\n            </a>\n            <a\n              href=\"https://twitter.com/intent/tweet?url=https%3A//safdarjamal.github.io/quiz-app/&text=Check%20out%20this%20quiz%20app%20—%20it%20rocks!&via=_safdarjamal\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Button color=\"twitter\" size=\"big\" style={{ marginBottom: 8 }}>\n                <Icon name=\"twitter\" />\n                Twitter\n              </Button>\n            </a>\n            <a\n              href=\"https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fsafdarjamal.github.io%2Fquiz-app%2F\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Button color=\"linkedin\" size=\"big\">\n                <Icon name=\"linkedin\" />\n                LinkedIn\n              </Button>\n            </a>\n          </Modal.Content>\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ShareButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Header, Button } from 'semantic-ui-react';\n\nimport ShareButton from '../ShareButton';\nimport { calculateScore, calculateGrade, timeConverter } from '../../utils';\n\nconst Stats = ({\n  totalQuestions,\n  correctAnswers,\n  timeTaken,\n  replayQuiz,\n  resetQuiz\n}) => {\n  const score = calculateScore(totalQuestions, correctAnswers);\n  const { grade, remarks } = calculateGrade(score);\n  const { hours, minutes, seconds } = timeConverter(timeTaken);\n\n  return (\n    <Segment>\n      <Header as=\"h1\" textAlign=\"center\" block>\n        {remarks}\n      </Header>\n      <Header as=\"h2\" textAlign=\"center\" block>\n        Grade: {grade}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Total Questions: {totalQuestions}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Correct Answers: {correctAnswers}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Your Score: {score}%\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Passing Score: 60%\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Time Taken:{' '}\n        {`${Number(hours)}h ${Number(minutes)}m ${Number(seconds)}s`}\n      </Header>\n      <div style={{ marginTop: 35 }}>\n        <Button\n          primary\n          content=\"Play Again\"\n          onClick={replayQuiz}\n          size=\"big\"\n          icon=\"redo\"\n          labelPosition=\"left\"\n          style={{ marginRight: 15, marginBottom: 8 }}\n        />\n        <Button\n          color=\"teal\"\n          content=\"Back to Home\"\n          onClick={resetQuiz}\n          size=\"big\"\n          icon=\"home\"\n          labelPosition=\"left\"\n          style={{ marginBottom: 8 }}\n        />\n        <ShareButton />\n      </div>\n    </Segment>\n  );\n};\n\nStats.propTypes = {\n  totalQuestions: PropTypes.number.isRequired,\n  correctAnswers: PropTypes.number.isRequired,\n  timeTaken: PropTypes.number.isRequired,\n  replayQuiz: PropTypes.func.isRequired,\n  resetQuiz: PropTypes.func.isRequired\n};\n\nexport default Stats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\n\nconst QNA = ({ questionsAndAnswers }) => {\n  return (\n    <Table celled striped selectable size=\"large\">\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>No.</Table.HeaderCell>\n          <Table.HeaderCell>Questions</Table.HeaderCell>\n          <Table.HeaderCell>Your Answers</Table.HeaderCell>\n          <Table.HeaderCell>Correct Answers</Table.HeaderCell>\n          <Table.HeaderCell>Points</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {questionsAndAnswers.map((item, i) => (\n          <Table.Row key={i + 1}>\n            <Table.Cell>{i + 1}</Table.Cell>\n            <Table.Cell>{item.question}</Table.Cell>\n            <Table.Cell>{item.user_answer}</Table.Cell>\n            <Table.Cell>{item.correct_answer}</Table.Cell>\n            <Table.Cell>{item.point}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n\nQNA.propTypes = {\n  questionsAndAnswers: PropTypes.array.isRequired\n};\n\nexport default QNA;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Menu } from 'semantic-ui-react';\n\nimport Stats from './Stats';\nimport QNA from './QNA';\n\nconst Result = ({\n  totalQuestions,\n  correctAnswers,\n  timeTaken,\n  questionsAndAnswers,\n  replayQuiz,\n  resetQuiz\n}) => {\n  const [activeTab, setActiveTab] = useState('Stats');\n\n  const handleTabClick = (e, { name }) => {\n    setActiveTab(name);\n  };\n\n  return (\n    <Container>\n      <Menu fluid widths={2}>\n        <Menu.Item\n          name=\"Stats\"\n          active={activeTab === 'Stats'}\n          onClick={handleTabClick}\n        />\n        <Menu.Item\n          name=\"QNA\"\n          active={activeTab === 'QNA'}\n          onClick={handleTabClick}\n        />\n      </Menu>\n      {activeTab === 'Stats' && (\n        <Stats\n          totalQuestions={totalQuestions}\n          correctAnswers={correctAnswers}\n          timeTaken={timeTaken}\n          replayQuiz={replayQuiz}\n          resetQuiz={resetQuiz}\n        />\n      )}\n      {activeTab === 'QNA' && <QNA questionsAndAnswers={questionsAndAnswers} />}\n      <br />\n    </Container>\n  );\n};\n\nResult.propTypes = {\n  totalQuestions: PropTypes.number.isRequired,\n  correctAnswers: PropTypes.number.isRequired,\n  timeTaken: PropTypes.number.isRequired,\n  questionsAndAnswers: PropTypes.array.isRequired,\n  replayQuiz: PropTypes.func.isRequired,\n  resetQuiz: PropTypes.func.isRequired\n};\n\nexport default Result;\n","import React, { useState } from 'react';\n\nimport Layout from '../Layout';\nimport Loader from '../Loader';\nimport Main from '../Main';\nimport Quiz from '../Quiz';\nimport Result from '../Result';\nimport { shuffle } from '../../utils';\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [major, setMajor] = useState(null);\n  const [countdownTime, setCountdownTime] = useState(null);\n  const [isQuizStarted, setIsQuizStarted] = useState(false);\n  const [isQuizCompleted, setIsQuizCompleted] = useState(false);\n  const [resultData, setResultData] = useState(null);\n\n  const startQuiz = (data, countdownTime, major) => {\n    console.log('data....', data);\n    setData(data);\n    setLoading(true);\n    setCountdownTime(countdownTime);\n    setMajor(major);\n    setIsQuizStarted(true);\n    setLoading(false);\n  };\n\n  const endQuiz = resultData => {\n    setLoading(true);\n    setIsQuizStarted(false);\n    setIsQuizCompleted(true);\n    setResultData(resultData);\n    setLoading(false);\n  };\n\n  const replayQuiz = () => {\n    setLoading(true);\n    const shuffledData = shuffle(data);\n    shuffledData.forEach(element => {\n      element.options = shuffle(element.options);\n    });\n    setData(shuffledData);\n    setIsQuizStarted(true);\n    setIsQuizCompleted(false);\n    setResultData(null);\n    setLoading(false);\n  };\n\n  const resetQuiz = () => {\n    setLoading(true);\n    setIsQuizStarted(false);\n    setIsQuizCompleted(false);\n    setResultData(null);\n    setLoading(false);\n  };\n\n  return (\n    <Layout>\n      {/*  TODO: redirect for authentication */}\n      {loading && < Loader />}\n      {!loading && !isQuizStarted && !isQuizCompleted && (\n        <Main startQuiz={startQuiz} />\n      )}\n      {!loading && isQuizStarted && (\n        <Quiz data={data} countdownTime={countdownTime} endQuiz={endQuiz} major={major} />\n      )}\n      {!loading && isQuizCompleted && (\n        <Result {...resultData} replayQuiz={replayQuiz} resetQuiz={resetQuiz} />\n      )}\n    </Layout>\n  );\n};\n\nexport default App;\n","import Swal from 'sweetalert2';\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service worker.'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              Swal.fire({\n                toast: 'true',\n                position: 'bottom',\n                icon: 'success',\n                title: 'App is ready to work offline.',\n                showConfirmButton: false,\n                timer: 6000\n              });\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider\n      domain=\"dev-88bircurddzvffqn.us.auth0.com\"\n      clientId=\"IlSZ7rPwgaPRDt81GGYnC7W138mdDyWA\"\n      authorizationParams={{\n        redirect_uri: window.location.href\n      }}>\n      <App />\n    </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}
{"version":3,"sources":["constants/countdownTime.js","components/Header/index.js","components/Layout/index.js","components/Loader/index.js","images/anandagandha-sm-copy.png","images/kailaasa-flag-triangular-2019-compressed.png","constants/categories.js","constants/numOfQuestions.js","utils/calculateGrade.js","utils/calculateScore.js","utils/getLetter.js","utils/shuffle.js","utils/timeConverter.js","components/Offline/index.js","components/Main/index.js","components/Countdown/index.js","components/Quiz/index.js","components/ShareButton/index.js","components/Result/Stats.js","components/Result/QNA.js","components/Result/index.js","components/App/index.js","serviceWorkerRegistration.js","index.js"],"names":["Header","_useState","useState","_useState2","_slicedToArray","setPromptEvent","_useState3","_useState4","appAccepted","_useAuth","useAuth0","isAuthenticated","isLoading","user","window","matchMedia","matches","addEventListener","e","preventDefault","_jsxs","Menu","divided","stackable","size","style","children","_jsx","Item","header","color","_Fragment","position","nickname","src","picture","alt","Layout","_ref","Fragment","Loader","Container","Message","icon","Icon","name","loading","Content","MAJORS","key","text","value","COUNTDOWN_TIME","hours","minutes","seconds","i","push","NUM_OF_QUESTIONS","calculateGrade","score","undefined","percentage","parseInt","grade","remarks","calculateScore","totalQuestions","correctAnswers","Number","toFixed","getLetter","number","letter","shuffle","array","_toConsumableArray","length","j","Math","floor","random","timeConverter","milliseconds","concat","slice","Offline","location","reload","Segment","placeholder","role","aria-label","Main","startQuiz","loginWithRedirect","_useAuth2","logout","major","setMajor","_useState5","_useState6","numOfQuestions","_useState7","_useState8","difficulty","_useState9","_useState10","questionsType","_useState11","_useState12","countdownTime","_useState13","_useState14","error","setError","_useState15","_useState16","offline","setOffline","_useState17","_useState18","setLoading","allFieldsSelected","useEffect","api","fetch","then","respone","json","data","forEach","element","options","answers","catch","navigator","onLine","Grid","columns","Row","Column","Image","verticalAlign","img","textAlign","anandagandha","floated","Group","onDismiss","message","Meta","Description","vertical","fluid","map","ele","disabled","active","onClick","marginRight","Divider","Extra","Button","logoutParams","returnTo","origin","labelPosition","content","primary","Countdown","timeOver","setTimeTaken","totalTime","timerTime","setTimerTime","_timeConverter","timer","setInterval","newTime","clearInterval","Swal","fire","title","willClose","basic","Popup","trigger","Quiz","endQuiz","questionIndex","setQuestionIndex","setCorrectAnswers","userSlectedAns","setUserSlectedAns","questionsAndAnswers","setQuestionsAndAnswers","timeTaken","handleItemClick","_ref2","as","block","floating","he","decode","question","option","decodedOption","_id","point","res","correct_answer","qna","user_answer","handleNext","ShareButton","share","circular","document","url","console","log","Modal","closeIcon","className","href","target","rel","marginBottom","Stats","replayQuiz","resetQuiz","_calculateGrade","marginTop","QNA","Table","celled","striped","selectable","HeaderCell","Body","item","Cell","Result","activeTab","setActiveTab","handleTabClick","widths","App","setData","setCountdownTime","isQuizStarted","setIsQuizStarted","isQuizCompleted","setIsQuizCompleted","resultData","setResultData","_objectSpread","shuffledData","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","toast","showConfirmButton","onSuccess","ReactDOM","render","React","StrictMode","Auth0Provider","domain","clientId","authorizationParams","redirect_uri","getElementById","URL","process","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.f93cdd37.chunk.js","sourcesContent":["const COUNTDOWN_TIME = {\n  hours: [],\n  minutes: [],\n  seconds: []\n};\n\nfor (let i = 0; i < 100; i++) {\n  COUNTDOWN_TIME.hours.push({ key: i, text: i, value: i * 60 * 60 });\n}\n\nfor (let i = 0; i < 60; i++) {\n  COUNTDOWN_TIME.minutes.push({ key: i, text: i, value: i * 60 });\n}\n\nfor (let i = 0; i < 60; i++) {\n  COUNTDOWN_TIME.seconds.push({ key: i, text: i, value: i });\n}\n\nexport default COUNTDOWN_TIME;\n","import React, { useState } from 'react';\nimport { Menu, Button } from 'semantic-ui-react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nconst Header = () => {\n  const [promptEvent, setPromptEvent] = useState(null);\n  const [appAccepted, setAppAccepted] = useState(false);\n  const { isAuthenticated, isLoading, user } = useAuth0();\n\n  let isAppInstalled = false;\n\n  if (window.matchMedia('(display-mode: standalone)').matches || appAccepted) {\n    isAppInstalled = true;\n  }\n\n  window.addEventListener('beforeinstallprompt', e => {\n    e.preventDefault();\n    setPromptEvent(e);\n  });\n\n  const installApp = () => {\n    promptEvent.prompt();\n    promptEvent.userChoice.then(result => {\n      if (result.outcome === 'accepted') {\n        setAppAccepted(true);\n        console.log('User accepted the A2HS prompt');\n      } else {\n        console.log('User dismissed the A2HS prompt');\n      }\n    });\n  };\n\n  return (\n    <Menu divided stackable size=\"massive\" style={{ 'background': '#570E0E' }}>\n      <Menu.Item header style={{ 'background': '#570E0E' }}>\n        <h1 style={{ color: 'white' }}>KET&nbsp;-&nbsp;Kailasa&nbsp;eligiblity&nbsp;test</h1>\n      </Menu.Item>\n\n      {isAuthenticated && !isLoading && (\n        <>\n          <Menu.Item position=\"right\" style={{ 'background': '#570E0E', 'color': 'white' }}>\n            <h1>Welcome {user.nickname}!&nbsp;&nbsp;&nbsp;&nbsp;</h1>\n            <img src={user.picture} alt=\"\" />\n          </Menu.Item>\n        </>\n      )}\n    </Menu >\n  );\n};\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Header from '../Header';\n\nconst Layout = ({ children }) => {\n  return (\n    <Fragment>\n      <Header />\n      <main>{children}</main>\n    </Fragment>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Layout;\n","import React from 'react';\nimport { Container, Message, Icon } from 'semantic-ui-react';\n\nconst Loader = () => {\n  return (\n    <Container>\n      <Message icon size=\"big\">\n        <Icon name=\"circle notched\" loading />\n        <Message.Content>\n          <Message.Header>Just one second</Message.Header>\n          We are fetching that content for you.\n        </Message.Content>\n      </Message>\n    </Container>\n  );\n};\n\nexport default Loader;\n","export default __webpack_public_path__ + \"static/media/anandagandha-sm-copy.debb8840.png\";","export default __webpack_public_path__ + \"static/media/kailaasa-flag-triangular-2019-compressed.b6011790.png\";","const MAJORS = [\n  {\n    key: '0',\n    text: 'Hindu Philosophy',\n    value: 'hinduPhilosophy'\n  },\n  {\n    key: '1',\n    text: 'Hindu History',\n    value: 'hinduHistory'\n  },\n  {\n    key: '2',\n    text: 'Hindu identity',\n    value: 'hinduIdentity'\n  },\n  {\n    key: '3',\n    text: 'Know your Nation',\n    value: 'knowYourNation'\n  },\n];\n\nexport default MAJORS;\n","const NUM_OF_QUESTIONS = [];\n\nfor (let i = 1; i <= 50; i++) {\n  NUM_OF_QUESTIONS.push({ key: i, text: i, value: i });\n}\n\nexport default NUM_OF_QUESTIONS;\n","const calculateGrade = score => {\n\n  if ( score === null || score === undefined || typeof score !== 'number' ) {\n    return null;\n  }\n\n  const percentage = parseInt(score);\n\n  let grade = null;\n  let remarks = null;\n\n  if (percentage >= 97) {\n    grade = 'A+';\n  } else if (percentage >= 93 && percentage <= 96) {\n    grade = 'A';\n  } else if (percentage >= 90 && percentage <= 92) {\n    grade = 'A-';\n  } else if (percentage >= 87 && percentage <= 89) {\n    grade = 'B+';\n  } else if (percentage >= 83 && percentage <= 86) {\n    grade = 'B';\n  } else if (percentage >= 80 && percentage <= 82) {\n    grade = 'B-';\n  } else if (percentage >= 77 && percentage <= 79) {\n    grade = 'C+';\n  } else if (percentage >= 73 && percentage <= 76) {\n    grade = 'C';\n  } else if (percentage >= 70 && percentage <= 72) {\n    grade = 'C-';\n  } else if (percentage >= 67 && percentage <= 69) {\n    grade = 'D+';\n  } else if (percentage >= 63 && percentage <= 66) {\n    grade = 'D';\n  } else if (percentage >= 60 && percentage <= 62) {\n    grade = 'D-';\n  } else if (percentage < 60) {\n    grade = 'F';\n  }\n\n  if (score >= 60) {\n    remarks = 'Congratulations, YOU PASSED!';\n  } else {\n    remarks = 'Sorry, YOU FAILED!';\n  }\n\n  return {\n    grade,\n    remarks\n  };\n};\n\nexport default calculateGrade;\n","const calculateScore = (totalQuestions, correctAnswers) => {\n  if ( totalQuestions === 0 ) {\n    return 0\n  }\n  return Number(((correctAnswers * 100) / totalQuestions).toFixed(2));\n};\n\nexport default calculateScore;\n","const getLetter = number => {\n  let letter;\n\n  switch (number) {\n    case 0:\n      letter = 'A.';\n      break;\n    case 1:\n      letter = 'B.';\n      break;\n    case 2:\n      letter = 'C.';\n      break;\n    case 3:\n      letter = 'D.';\n      break;\n    default:\n      letter = null;\n      break;\n  }\n\n  return letter;\n};\n\nexport default getLetter;\n","const shuffle = array => {\n  array = [...array];\n\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n};\n\nexport default shuffle;\n","const timeConverter = milliseconds => {\n  if ( milliseconds === null || milliseconds === undefined || typeof milliseconds !== 'number' ) {\n    return null;\n  }\n  const hours = `0${Math.floor(milliseconds / 3600000)}`.slice(-2);\n  const minutes = `0${Math.floor((milliseconds / 60000) % 60)}`.slice(-2);\n  const seconds = `0${Math.floor((milliseconds / 1000) % 60) % 60}`.slice(-2);\n\n  return {\n    hours,\n    minutes,\n    seconds\n  };\n};\n\nexport default timeConverter;\n","import React from 'react';\nimport { Container, Segment, Header, Icon } from 'semantic-ui-react';\n\nconst Offline = () => {\n  window.addEventListener('online', () => window.location.reload());\n\n  return (\n    <Container>\n      <Segment placeholder>\n        <Header icon>\n          <Icon name=\"unlink\" />\n          <h1>Offline</h1>\n          <p>\n            There is no Internet connection. We'll try to reload automatically\n            once you're back online!{' '}\n            <span role=\"img\" aria-label=\"signal\">\n              📶\n            </span>\n          </p>\n        </Header>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default Offline;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  Segment,\n  Item,\n  Divider,\n  Button,\n  Message,\n  Menu,\n  Image,\n  Grid\n} from 'semantic-ui-react';\n\nimport anandagandha from '../../images/anandagandha-sm-copy.png'\nimport img from '../../images/kailaasa-flag-triangular-2019-compressed.png'\n\nimport {\n  MAJORS,\n} from '../../constants';\nimport { shuffle } from '../../utils';\n\nimport Offline from '../Offline';\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Main = ({ startQuiz }) => {\n  const { loginWithRedirect } = useAuth0();\n  const { logout, isAuthenticated, isLoading, user } = useAuth0();\n\n  const [isLoggedin, setIsloggedIn] = useState(false);\n  const [major, setMajor] = useState({ value: null, text: null });\n  const [numOfQuestions, setNumOfQuestions] = useState(5);\n  const [difficulty, setDifficulty] = useState('0');\n  const [questionsType, setQuestionsType] = useState('0');\n  const [countdownTime, setCountdownTime] = useState({\n    hours: 0,\n    minutes: 4,\n    seconds: 0,\n  });\n  // const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [offline, setOffline] = useState(false);\n  const handleTimeChange = (e, { name, value }) => {\n    setCountdownTime({ ...countdownTime, [name]: value });\n  };\n  const [loading, setLoading] = useState(false);\n  let allFieldsSelected = false;\n  if (\n    major.value &&\n    numOfQuestions &&\n    difficulty &&\n    questionsType &&\n    (countdownTime.hours || countdownTime.minutes || countdownTime.seconds)\n  ) {\n    allFieldsSelected = true;\n  }\n  useEffect(() => {\n    // setProcessing(true, () => {\n    if (!loading) return;\n    const api = 'https://kerserver.onrender.com/' + major.value;\n    fetch(api)\n      .then(respone => respone.json())\n      .then(data => {\n        // const { response_code, results } = data;\n        data.forEach(element => {\n          element.options = shuffle([\n            ...element.answers,\n          ]);\n        });\n        // setProcessing(false);\n        startQuiz(\n          data,\n          countdownTime.hours * 60 * 60 + countdownTime.minutes * 60 + countdownTime.seconds,\n          major\n        );\n      })\n      .catch(error => {\n        // setTimeout(() => {\n        if (!navigator.onLine) {\n          setOffline(true);\n        } else {\n          // setProcessing(false);\n          setError(error);\n        }\n        // }, 1000)\n      }\n      );\n    // });\n    if (error) setError(null);\n  }, [loading]);\n\n  if (offline) return <Offline />;\n  return (\n    <Container>\n      <Segment>\n        <Grid columns={3}>\n          <Grid.Row>\n            <Grid.Column key={1}><Image size=\"medium\" verticalAlign=\"middle\" src={img} /></Grid.Column>\n            <Grid.Column key={2} textAlign=\"center\" verticalAlign=\"middle\"><h2>Majors</h2></Grid.Column>\n            <Grid.Column key={3}><Image size=\"small\" verticalAlign=\"middle\" src={anandagandha} floated=\"right\" /></Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n      <Segment>\n        <Item.Group >\n          <Item>\n            <Item.Content>\n              {error && (\n                <Message error onDismiss={() => setError(null)}>\n                  <Message.Header>Error!</Message.Header>\n                  {error.message}\n                </Message>\n              )}\n              <Item.Meta>\n                <br />\n                <Item.Description>\n                  {isAuthenticated && !isLoading ? <h3>Please choose a major to start, complete all the majors</h3> : <h3>Please login to start</h3>}\n                </Item.Description>\n                <Menu vertical fluid size=\"massive\" >\n                  {MAJORS.map((ele, i) => {\n                    return (\n                      <Menu.Item\n                        key={i}\n                        name={ele.text}\n                        disabled={!isAuthenticated}\n                        active={major.value === ele.value}\n                        onClick={() => { setMajor(ele) }}>\n                        <b style={{ marginRight: '8px' }}>{i + 1}. </b>\n                        {ele.text}\n                      </Menu.Item>\n                    );\n                  })}\n                </Menu>\n              </Item.Meta>\n              <Divider />\n              <Divider />\n              <Item.Extra>\n                {!isAuthenticated && !isLoading ? <Button primary\n                  size=\"big\"\n                  icon=\"user\"\n                  labelPosition=\"left\"\n                  content={'Login'}\n                  onClick={() => {\n                    loginWithRedirect();\n\n                  }}\n                  disabled={allFieldsSelected || loading} /> :\n                  <Button\n                    onClick={() => logout({ logoutParams: { returnTo: window.location.origin } })}\n                    size=\"big\"\n                    icon=\"user\"\n                    labelPosition=\"left\"\n                    content={'Logout'}\n                    disabled={allFieldsSelected || loading} />}\n                <Button\n                  primary\n                  size=\"big\"\n                  icon=\"play\"\n                  labelPosition=\"left\"\n                  content={loading ? 'Processing...' : 'Start Now'}\n                  onClick={() => setLoading(true)}\n                  disabled={!allFieldsSelected || loading}\n                  floated=\"right\"\n                />\n              </Item.Extra>\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      {/* <Segment>\n        <Grid columns={3}>\n          <Grid.Row>\n            <Grid.Column key={1}><h3>Welcome &nbsp;&nbsp;&nbsp;&nbsp; {user.name}</h3></Grid.Column>\n            <Grid.Column key={2} textAlign=\"center\" verticalAlign=\"middle\"><h2>&nbsp;&nbsp;&nbsp;&nbsp;{user.email}</h2></Grid.Column>\n            <Grid.Column key={3}><h2>{user.phone_number} {user.address} </h2></Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment> */}\n      <br />\n    </Container >\n  );\n};\nMain.propTypes = {\n  startQuiz: PropTypes.func.isRequired,\n};\nexport default Main;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Popup } from 'semantic-ui-react';\nimport Swal from 'sweetalert2';\n\nimport { timeConverter } from '../../utils';\n\nconst Countdown = ({ countdownTime, timeOver, setTimeTaken }) => {\n  const totalTime = countdownTime * 1000;\n  const [timerTime, setTimerTime] = useState(totalTime);\n  const { hours, minutes, seconds } = timeConverter(timerTime);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const newTime = timerTime - 1000;\n\n      if (newTime >= 0) {\n        setTimerTime(newTime);\n      } else {\n        clearInterval(timer);\n\n        Swal.fire({\n          title: `Your Time's Up`,\n          icon: 'info',\n          timer: 5000,\n          willClose: () => timeOver(totalTime - timerTime)\n        });\n      }\n    }, 1000);\n\n    return () => {\n      clearInterval(timer);\n      setTimeTaken(totalTime - timerTime + 1000);\n    };\n\n    // eslint-disable-next-line\n  }, [timerTime]);\n\n  return (\n    <Button.Group size=\"massive\" basic floated=\"right\">\n      <Popup\n        content=\"Hours\"\n        trigger={<Button active>{hours}</Button>}\n        position=\"bottom left\"\n      />\n      <Popup\n        content=\"Minutes\"\n        trigger={<Button active>{minutes}</Button>}\n        position=\"bottom left\"\n      />\n      <Popup\n        content=\"Seconds\"\n        trigger={<Button active>{seconds}</Button>}\n        position=\"bottom left\"\n      />\n    </Button.Group>\n  );\n};\n\nCountdown.propTypes = {\n  countdownTime: PropTypes.number.isRequired,\n  timeOver: PropTypes.func.isRequired,\n  setTimeTaken: PropTypes.func.isRequired\n};\n\nexport default Countdown;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  Segment,\n  Item,\n  Divider,\n  Button,\n  Image,\n  Grid,\n  Icon,\n  Message,\n  Menu,\n  Header\n} from 'semantic-ui-react';\n\nimport he from 'he';\n\nimport Countdown from '../Countdown';\nimport { getLetter } from '../../utils';\nimport img from '../../images/kailaasa-flag-triangular-2019-compressed.png';\nimport anandagandha from '../../images/anandagandha-sm-copy.png'\n\n\n\nconst Quiz = ({ data, countdownTime, endQuiz, major }) => {\n\n\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [userSlectedAns, setUserSlectedAns] = useState(null);\n  const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n  const [timeTaken, setTimeTaken] = useState(null);\n\n  const handleItemClick = (e, { name }) => {\n    setUserSlectedAns(name);\n  };\n\n\n  const handleNext = (_id) => {\n    let point = 0;\n    const api = 'https://kerserver.onrender.com/' + major.value + '/' + _id;\n    fetch(api)\n      .then(respone => {\n        return respone.json().then(res => {\n          if (res.correct_answer === userSlectedAns) point = 1;\n\n          const qna = questionsAndAnswers;\n          qna.push({\n            question: he.decode(data[questionIndex].question),\n            user_answer: userSlectedAns,\n            correct_answer: res.correct_answer,\n            point\n          });\n\n          if (questionIndex === data.length - 1) {\n            return endQuiz({\n              totalQuestions: data.length,\n              correctAnswers: correctAnswers + point,\n              timeTaken,\n              questionsAndAnswers: qna\n            });\n          }\n\n          setCorrectAnswers(correctAnswers + point);\n          setQuestionIndex(questionIndex + 1);\n          setUserSlectedAns(null);\n          setQuestionsAndAnswers(qna);\n        })\n      })\n  };\n\n  const timeOver = timeTaken => {\n    return endQuiz({\n      totalQuestions: data.length,\n      correctAnswers,\n      timeTaken,\n      questionsAndAnswers\n    });\n  };\n\n  // const [questionIndex, setQuestionIndex] = useState(0);\n  // const [correctAnswers, setCorrectAnswers] = useState(0);\n  // const [userSlectedAns, setUserSlectedAns] = useState(null);\n  // const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n  // const [timeTaken, setTimeTaken] = useState(null);\n  // const [offline, setOffline] = useState(false);\n\n\n  // const [processing, setProcessing] = useState(false);\n  // const [error, setError] = useState(null);\n\n  // const handleItemClick = (e, { name }) => {\n  //   setUserSlectedAns(name);\n  // };\n\n  // const handleNext = (_id) => {\n  //   let point = 0;\n  //   setProcessing(true);\n  //   if (error) setError(null);\n  //   let qna;\n  //   const api = 'http://localhost:5050/' + major.value + '/' + _id;\n  //   fetch(api)\n  //     .then(respone => {\n  //       return respone.json().then(res => {\n  //         point = res.correct_answer === userSlectedAns ? 1 : 0;\n  //         qna = [...questionsAndAnswers, {\n  //           question: he.decode(data[questionIndex].question),\n  //           user_answer: userSlectedAns,\n  //           correct_answer: res.correct_answer,\n  //           point\n  //         }];\n  //         setQuestionsAndAnswers(qna);\n  //         setCorrectAnswers(correctAnswers + point);\n  //         setUserSlectedAns(null);\n  //         setProcessing(false);\n  //       }).then(() => {\n  //         setQuestionIndex(questionIndex + 1, () => {\n  //           if (questionIndex === data.length - 1) {\n  //             return endQuiz({\n  //               totalQuestions: data.length,\n  //               correctAnswers: correctAnswers,\n  //               timeTaken,\n  //               questionsAndAnswers,\n  //             });\n  //           }\n  //         });\n  //       })\n  //     }).catch(error =>\n  //       setTimeout(() => {\n  //         if (!navigator.onLine) {\n  //           setOffline(true);\n  //         } else {\n  //           setProcessing(false);\n  //           setError(error);\n  //         }\n  //       }, 1000)\n  //     );\n  // };\n\n  // if (questionIndex === data.length - 1) {\n  //   return endQuiz({\n  //     totalQuestions: data.length,\n  //     correctAnswers: correctAnswers,\n  //     timeTaken,\n  //     questionsAndAnswers,\n  //   });\n  // }\n\n  // const timeOver = timeTaken => {\n  //   return endQuiz({\n  //     totalQuestions: data.length,\n  //     correctAnswers,\n  //     timeTaken,\n  //     questionsAndAnswers\n  //   });\n  // };\n\n\n\n  return (\n    <Item.Header>\n      <Container>\n        <Segment>\n          <Grid columns={3}>\n            <Grid.Row>\n              <Grid.Column key={1}><Image size=\"medium\" verticalAlign=\"middle\" src={img} /></Grid.Column>\n              <Grid.Column key={2} textAlign=\"center\" verticalAlign=\"middle\"><h2>{major.text}</h2></Grid.Column>\n              <Grid.Column key={3}><Image size=\"small\" src={anandagandha} floated=\"right\" /></Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n        <Segment>\n          <Item.Group divided>\n            <Item>\n              <Item.Content>\n                <Item.Extra>\n                  <Header as=\"h1\" block floated=\"left\">\n                    <Icon name=\"info circle\" />\n                    <Header.Content>\n                      {`Question No.${questionIndex + 1} of ${data.length}`}\n                    </Header.Content>\n                  </Header>\n                  <Countdown\n                    countdownTime={countdownTime}\n                    timeOver={timeOver}\n                    setTimeTaken={setTimeTaken}\n                  />\n                </Item.Extra>\n                <br />\n                <Item.Meta>\n                  <Message size=\"huge\" floating>\n                    <b>{`Q. ${he.decode(data[questionIndex].question)}`}</b>\n                  </Message>\n                  <br />\n                  <Item.Description>\n                    <h3>Please choose one of the following answers:</h3>\n                  </Item.Description>\n                  <Divider />\n                  <Menu vertical fluid size=\"massive\">\n                    {data[questionIndex].options.map((option, i) => {\n                      const letter = getLetter(i);\n                      const decodedOption = he.decode(option);\n                      return (\n                        <Menu.Item\n                          key={decodedOption}\n                          name={decodedOption}\n                          active={userSlectedAns === decodedOption}\n                          onClick={handleItemClick}\n                        >\n                          <b style={{ marginRight: '8px' }}>{letter}</b>\n                          {decodedOption}\n                        </Menu.Item>\n                      );\n                    })}\n                  </Menu>\n                </Item.Meta>\n                <Divider />\n                <Item.Extra>\n                  <Button\n                    primary\n                    content=\"Next\"\n                    onClick={() => handleNext(he.decode(data[questionIndex]._id))}\n                    floated=\"right\"\n                    size=\"big\"\n                    icon=\"right chevron\"\n                    labelPosition=\"right\"\n                    disabled={!userSlectedAns}\n                  />\n                </Item.Extra>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n        <br />\n      </Container>\n    </Item.Header>\n  );\n};\n\nQuiz.propTypes = {\n  data: PropTypes.array.isRequired,\n  countdownTime: PropTypes.number.isRequired,\n  endQuiz: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React, { Fragment } from 'react';\nimport { Button, Icon, Modal } from 'semantic-ui-react';\n\nconst ShareButton = () => {\n  const handleClick = () => {\n    navigator\n      .share({\n        title: document.title,\n        text: 'Check out this quiz app — it rocks!',\n        url: 'https://safdarjamal.github.io/quiz-app/'\n      })\n      .then(() => console.log('Successfully shared'))\n      .catch(error => console.log(error.message));\n  };\n\n  return (\n    <Fragment>\n      {navigator.share ? (\n        <Button\n          title=\"Share\"\n          floated=\"right\"\n          size=\"big\"\n          circular\n          icon=\"share alternate\"\n          onClick={handleClick}\n        />\n      ) : (\n        <Modal\n          closeIcon\n          size=\"tiny\"\n          trigger={\n            <Button\n              title=\"Share\"\n              floated=\"right\"\n              size=\"big\"\n              circular\n              icon=\"share alternate\"\n            />\n          }\n        >\n          <Modal.Header className=\"ui center aligned\">Share on</Modal.Header>\n          <Modal.Content className=\"ui center aligned container\">\n            <a\n              href=\"https://www.facebook.com/sharer.php?u=https%3A//safdarjamal.github.io/quiz-app/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Button color=\"facebook\" size=\"big\" style={{ marginBottom: 8 }}>\n                <Icon name=\"facebook\" />\n                Facebook\n              </Button>\n            </a>\n            <a\n              href=\"https://twitter.com/intent/tweet?url=https%3A//safdarjamal.github.io/quiz-app/&text=Check%20out%20this%20quiz%20app%20—%20it%20rocks!&via=_safdarjamal\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Button color=\"twitter\" size=\"big\" style={{ marginBottom: 8 }}>\n                <Icon name=\"twitter\" />\n                Twitter\n              </Button>\n            </a>\n            <a\n              href=\"https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fsafdarjamal.github.io%2Fquiz-app%2F\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Button color=\"linkedin\" size=\"big\">\n                <Icon name=\"linkedin\" />\n                LinkedIn\n              </Button>\n            </a>\n          </Modal.Content>\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ShareButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Header, Button } from 'semantic-ui-react';\n\nimport ShareButton from '../ShareButton';\nimport { calculateScore, calculateGrade, timeConverter } from '../../utils';\n\nconst Stats = ({\n  totalQuestions,\n  correctAnswers,\n  timeTaken,\n  replayQuiz,\n  resetQuiz\n}) => {\n  const score = calculateScore(totalQuestions, correctAnswers);\n  const { grade, remarks } = calculateGrade(score);\n  const { hours, minutes, seconds } = timeConverter(timeTaken);\n\n  return (\n    <Segment>\n      <Header as=\"h1\" textAlign=\"center\" block>\n        {remarks}\n      </Header>\n      <Header as=\"h2\" textAlign=\"center\" block>\n        Grade: {grade}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Total Questions: {totalQuestions}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Correct Answers: {correctAnswers}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Your Score: {score}%\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Passing Score: 60%\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Time Taken:{' '}\n        {`${Number(hours)}h ${Number(minutes)}m ${Number(seconds)}s`}\n      </Header>\n      <div style={{ marginTop: 35 }}>\n        <Button\n          primary\n          content=\"Play Again\"\n          onClick={replayQuiz}\n          size=\"big\"\n          icon=\"redo\"\n          labelPosition=\"left\"\n          style={{ marginRight: 15, marginBottom: 8 }}\n        />\n        <Button\n          color=\"teal\"\n          content=\"Back to Home\"\n          onClick={resetQuiz}\n          size=\"big\"\n          icon=\"home\"\n          labelPosition=\"left\"\n          style={{ marginBottom: 8 }}\n        />\n        <ShareButton />\n      </div>\n    </Segment>\n  );\n};\n\nStats.propTypes = {\n  totalQuestions: PropTypes.number.isRequired,\n  correctAnswers: PropTypes.number.isRequired,\n  timeTaken: PropTypes.number.isRequired,\n  replayQuiz: PropTypes.func.isRequired,\n  resetQuiz: PropTypes.func.isRequired\n};\n\nexport default Stats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\n\nconst QNA = ({ questionsAndAnswers }) => {\n  return (\n    <Table celled striped selectable size=\"large\">\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>No.</Table.HeaderCell>\n          <Table.HeaderCell>Questions</Table.HeaderCell>\n          <Table.HeaderCell>Your Answers</Table.HeaderCell>\n          <Table.HeaderCell>Correct Answers</Table.HeaderCell>\n          <Table.HeaderCell>Points</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {questionsAndAnswers.map((item, i) => (\n          <Table.Row key={i + 1}>\n            <Table.Cell>{i + 1}</Table.Cell>\n            <Table.Cell>{item.question}</Table.Cell>\n            <Table.Cell>{item.user_answer}</Table.Cell>\n            <Table.Cell>{item.correct_answer}</Table.Cell>\n            <Table.Cell>{item.point}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n\nQNA.propTypes = {\n  questionsAndAnswers: PropTypes.array.isRequired\n};\n\nexport default QNA;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Menu } from 'semantic-ui-react';\n\nimport Stats from './Stats';\nimport QNA from './QNA';\n\nconst Result = ({\n  totalQuestions,\n  correctAnswers,\n  timeTaken,\n  questionsAndAnswers,\n  replayQuiz,\n  resetQuiz\n}) => {\n  const [activeTab, setActiveTab] = useState('Stats');\n\n  const handleTabClick = (e, { name }) => {\n    setActiveTab(name);\n  };\n\n  return (\n    <Container>\n      <Menu fluid widths={2}>\n        <Menu.Item\n          name=\"Stats\"\n          active={activeTab === 'Stats'}\n          onClick={handleTabClick}\n        />\n        <Menu.Item\n          name=\"QNA\"\n          active={activeTab === 'QNA'}\n          onClick={handleTabClick}\n        />\n      </Menu>\n      {activeTab === 'Stats' && (\n        <Stats\n          totalQuestions={totalQuestions}\n          correctAnswers={correctAnswers}\n          timeTaken={timeTaken}\n          replayQuiz={replayQuiz}\n          resetQuiz={resetQuiz}\n        />\n      )}\n      {activeTab === 'QNA' && <QNA questionsAndAnswers={questionsAndAnswers} />}\n      <br />\n    </Container>\n  );\n};\n\nResult.propTypes = {\n  totalQuestions: PropTypes.number.isRequired,\n  correctAnswers: PropTypes.number.isRequired,\n  timeTaken: PropTypes.number.isRequired,\n  questionsAndAnswers: PropTypes.array.isRequired,\n  replayQuiz: PropTypes.func.isRequired,\n  resetQuiz: PropTypes.func.isRequired\n};\n\nexport default Result;\n","import React, { useState } from 'react';\n\nimport Layout from '../Layout';\nimport Loader from '../Loader';\nimport Main from '../Main';\nimport Quiz from '../Quiz';\nimport Result from '../Result';\nimport { shuffle } from '../../utils';\n\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [major, setMajor] = useState(null);\n  const [countdownTime, setCountdownTime] = useState(null);\n  const [isQuizStarted, setIsQuizStarted] = useState(false);\n  const [isQuizCompleted, setIsQuizCompleted] = useState(false);\n  const [resultData, setResultData] = useState(null);\n\n  const startQuiz = (data, countdownTime, major) => {\n    setLoading(true);\n    setCountdownTime(countdownTime);\n    setData(data);\n    setMajor(major);\n    setIsQuizStarted(true);\n    setLoading(false);\n\n\n\n    // setTimeout(() => {\n    // }, 1000);\n  };\n\n  const endQuiz = resultData => {\n    setLoading(true);\n    setIsQuizStarted(false);\n    setIsQuizCompleted(true);\n    setResultData(resultData);\n    setLoading(false);\n\n    // setTimeout(() => {\n\n    // }, 1000);\n  };\n\n  const replayQuiz = () => {\n    setLoading(true);\n    const shuffledData = shuffle(data);\n    shuffledData.forEach(element => {\n      element.options = shuffle(element.options);\n    });\n    setData(shuffledData);\n    setIsQuizStarted(true);\n    setIsQuizCompleted(false);\n    setResultData(null);\n    setLoading(false);\n  };\n\n  const resetQuiz = () => {\n    setLoading(true);\n    setIsQuizStarted(false);\n    setIsQuizCompleted(false);\n    setResultData(null);\n    setLoading(false);\n  };\n\n  return (\n    <Layout>\n      {/*  TODO: redirect for authentication */}\n      {loading && <Loader />}\n      {!loading && !isQuizStarted && !isQuizCompleted && (\n        <Main startQuiz={startQuiz} />\n      )}\n      {!loading && isQuizStarted && (\n        <Quiz data={data} countdownTime={countdownTime} endQuiz={endQuiz} major={major} />\n      )}\n      {!loading && isQuizCompleted && (\n        <Result {...resultData} replayQuiz={replayQuiz} resetQuiz={resetQuiz} />\n      )}\n    </Layout>\n  );\n};\n\nexport default App;\n","import Swal from 'sweetalert2';\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service worker.'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              Swal.fire({\n                toast: 'true',\n                position: 'bottom',\n                icon: 'success',\n                title: 'App is ready to work offline.',\n                showConfirmButton: false,\n                timer: 6000\n              });\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider\n      domain=\"dev-88bircurddzvffqn.us.auth0.com\"\n      clientId=\"IlSZ7rPwgaPRDt81GGYnC7W138mdDyWA\"\n      authorizationParams={{\n        redirect_uri: window.location.origin\n      }}\n    >\n      <App />\n    </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}